Epoch: [1]  [  0/145]  eta: 0:01:14  lr: 0.010000  loss: 1.4982 (1.4982)  loss_classifier: 0.7189 (0.7189)  loss_box_reg: 0.0113 (0.0113)  loss_objectness: 0.6930 (0.6930)  loss_rpn_box_reg: 0.0750 (0.0750)  time: 0.5171  data: 0.1618  max mem: 2617
/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details.
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [1]  [144/145]  eta: 0:00:00  lr: 0.010000  loss: 1.1137 (1.0019)  loss_classifier: 0.1792 (0.1809)  loss_box_reg: 0.0659 (0.0220)  loss_objectness: 0.6169 (0.6553)  loss_rpn_box_reg: 0.0871 (0.1436)  time: 0.7701  data: 0.0069  max mem: 11869
Epoch: [1] Total time: 0:01:46 (0.7326 s / it)
Saving model
Epoch: [2]  [  0/145]  eta: 0:01:09  lr: 0.010000  loss: 0.9359 (0.9359)  loss_classifier: 0.2191 (0.2191)  loss_box_reg: 0.0735 (0.0735)  loss_objectness: 0.5748 (0.5748)  loss_rpn_box_reg: 0.0684 (0.0684)  time: 0.4821  data: 0.1364  max mem: 11869
Traceback (most recent call last):
  File "train.py", line 193, in <module>
    train()
  File "train.py", line 184, in train
    train_one_epoch(model, optimizer, train_data_loader,
  File "/home/choi/hwang/workspace/HeadHunter/head_detection/vision/engine.py", line 46, in train_one_epoch
    continue
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 619, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torchvision/models/detection/generalized_rcnn.py", line 100, in forward
    detections, detector_losses = self.roi_heads(features, proposals, images.image_sizes, targets)
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/choi/hwang/workspace/HeadHunter/head_detection/models/fast_rcnn.py", line 339, in forward
    class_logits, box_regression = self.box_predictor(box_features)
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torchvision/models/detection/faster_rcnn.py", line 280, in forward
    scores = self.cls_score(x)
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torch/nn/modules/linear.py", line 93, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/choi/anaconda3/envs/headhunter/lib/python3.8/site-packages/torch/nn/functional.py", line 1690, in linear
    ret = torch.addmm(bias, input, weight.t())
KeyboardInterrupt
